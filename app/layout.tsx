import type { Metadata } from "next";
import { Geist, Azeret_Mono as Geist_Mono } from "next/font/google";
import "./globals.css";
import React from "react";
import SideBar from "@/components/shared/SideBar";
import { Button } from "@/components/ui/button";
import { Bell, HelpCircle, Settings } from "lucide-react";
import { auth } from "@/auth";
import Image from "next/image";
import {
  Popover,
  PopoverContent,
  PopoverTrigger,
} from "@/components/ui/popover";
import SignOut from "@/components/shared/auth/SignOut";
import QueryProvider from "@/components/QueryProvider";
import MobileMenu from "@/components/shared/MobileMenu";
import { AuthSession } from "@/types";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session: AuthSession = await auth();

  return (
    <QueryProvider>
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <div className="min-h-screen bg-background">
            <header className="fixed top-0 left-0 right-0 z-50 flex items-center justify-between p-4 border-b bg-background/80 backdrop-blur-sm">
              <MobileMenu />
              <div className="items-center gap-2 mr-4 hidden md:flex">
                <span className="font-bold">Trust Labs</span>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  strokeWidth="2"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  className="lucide lucide-chevron-down h-4 w-4"
                >
                  <path d="m6 9 6 6 6-6"></path>
                </svg>
              </div>
              <div className="flex items-center space-x-2 sm:space-x-4">
                <Button variant="ghost" size="icon">
                  <HelpCircle className="w-5 h-5" />
                </Button>
                <Button variant="ghost" size="icon">
                  <Bell className="w-5 h-5" />
                </Button>
                <Button variant="ghost" size="icon">
                  <Settings className="w-5 h-5" />
                </Button>
                {session && (
                  <Popover>
                    <PopoverTrigger>
                      <Image
                        priority
                        src={session.user?.image as string}
                        width={36}
                        height={36}
                        className="rounded-full text-purple-600 bg-purple-100"
                        alt={session.user?.name as string}
                      />
                    </PopoverTrigger>
                    <PopoverContent className="w-48 p-4 mr-4">
                      <div className="flex flex-col items-center space-y-2">
                        <Image
                          priority
                          src={session.user?.image as string}
                          width={48}
                          height={48}
                          className="rounded-full"
                          alt={session.user?.name as string}
                        />
                        <p className="text-sm font-medium text-gray-800">
                          {session.user?.name}
                        </p>
                        <p className="text-xs text-gray-500">
                          {session.user?.email}
                        </p>
                        <SignOut textBtn="Logout" />
                      </div>
                    </PopoverContent>
                  </Popover>
                )}
              </div>
            </header>

            {/* Main content area with fixed sidebar */}
            <div className="pt-[73px] flex">
              <SideBar />
              <main className="flex-1 p-4 sm:p-6 ml-0 md:ml-64 max-w-[718px] xxl:mx-auto">
                <div className="max-w-4xl mx-auto">{children}</div>
              </main>
            </div>
          </div>
        </body>
      </html>
    </QueryProvider>
  );
}
